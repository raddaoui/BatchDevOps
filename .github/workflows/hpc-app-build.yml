# This is a basic workflow to help you get started with Actions

name: Publish HPC App Binaries

# Controls when the workflow will run
on:
  push:
    branches: [ main ]
    paths:
    - 'hpc-application/**'    
  pull_request:
    branches: [ main ]
    paths:
    - 'hpc-application/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AZURE_SUBSCRIPTION_ID: "2d29908b-9e1b-407e-8678-73678dbc8a62"
  AZURE_RESOURCE_GROUP: "BatchDevops-rg"
  batchAccountName: "testbaala"
  batchAccountPoolName: "pool1"
  batchAppName: "ffmpeg"
  batchApplicationVersion: "v1"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Archive HPC app
        run: |
          mkdir package
          pushd hpc-application
          zip -r ../package/${{ github.sha }}.zip ./ffmpeg-3.4-win64-static
          popd
          ls
      - uses: actions/upload-artifact@main
        with:
          name: application-package
          path: package

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          mkdir temp
          unzip -qq package/${{ github.sha }}.zip -d ./temp
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          pwd
          ls temp/ffmpeg-3.4-win64-static

  create-batch-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ARM Template
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
          deploymentName: batchresources-${{ github.sha }}
          template: ./arm-templates/deployment.json
          parameters: templateContainerUri=https://raw.githubusercontent.com/raddaoui/BatchDevOps/main/arm-templates applicationStorageAccountName=testbaalasa batchAccountName=${{ env.batchAccountName }} batchAccountPoolName=${{ env.batchAccountPoolName }}

  deploy-batch-application:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [build]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Create Application in batch Account
        run: az batch application create --application-name ${{ env.batchAppName }} --name ${{ env.batchAccountName }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}

      - uses: actions/download-artifact@v3
        with:
          name: application-package
          path: downloads
    
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ./downloads
        
      - name: Upload package to Azure Batch account
        run: az batch application package create --application-name ${{ env.batchAppName }} --name ${{ env.batchAccountName }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --version ${{ env.batchApplicationVersion }} --package-file=./downloads/${{ github.sha }}.zip
      - name: Azure logout
        run: |
          az logout

      
