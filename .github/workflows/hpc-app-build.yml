# This is a basic workflow to help you get started with Actions

name: Publish HPC App Binaries

# Controls when the workflow will run
on:
  push:
    branches: [ main ]
    paths:
    - 'hpc-application/**'    
  pull_request:
    branches: [ main ]
    paths:
    - 'hpc-application/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AZURE_SUBSCRIPTION_ID: "2d29908b-9e1b-407e-8678-73678dbc8a62"
  AZURE_RESOURCE_GROUP: "BatchDevops-rg"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Runs print env
      - name: Run a one-line script
        run: printenv

      # Runs a set of commands using the runners shell
      - name: Archive HPC app
        run: |
          mkdir package
          pushd hpc-application
          zip -r ../package/${{ github.sha }}.zip ./ffmpeg-3.4-win64-static
          popd
          ls
      - uses: actions/upload-artifact@main
        with:
          name: application package
          path: package

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          mkdir temp
          unzip -qq package/${{ github.sha }}.zip -d ./temp
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          pwd
          ls temp/ffmpeg-3.4-win64-static

  deploy-arm-templates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@main

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ARM Template
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
          deploymentName: batchresources-${{ github.sha }}
          template: ./arm-templates/deployment.json
          parameters: templateContainerUri=https://raw.githubusercontent.com/raddaoui/BatchDevOps/main/arm-templates applicationStorageAccountName=testbaalasa batchAccountName=testbaala batchAccountPoolName=pool1

